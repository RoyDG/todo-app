[{"D:\\Web Development\\TODO\\todo-app\\src\\index.js":"1","D:\\Web Development\\TODO\\todo-app\\src\\reportWebVitals.js":"2","D:\\Web Development\\TODO\\todo-app\\src\\App.js":"3","D:\\Web Development\\TODO\\todo-app\\src\\Todo.js":"4","D:\\Web Development\\TODO\\todo-app\\src\\firebase.js":"5","D:\\Web Development\\TODO\\todo-app\\src\\SimpleModal.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1886,"mtime":1607625971172,"results":"10","hashOfConfig":"8"},{"size":3105,"mtime":1607766491342,"results":"11","hashOfConfig":"8"},{"size":441,"mtime":1607260942723,"results":"12","hashOfConfig":"8"},{"size":1701,"mtime":1607765517496,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ydg7hh",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web Development\\TODO\\todo-app\\src\\index.js",[],["28","29"],"D:\\Web Development\\TODO\\todo-app\\src\\reportWebVitals.js",[],"D:\\Web Development\\TODO\\todo-app\\src\\App.js",[],"D:\\Web Development\\TODO\\todo-app\\src\\Todo.js",["30","31","32","33"],"import { Button, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport './Todo.css';\r\nimport db from './firebase';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Modal from '@material-ui/core/Modal';\r\nimport SimpleModal from './SimpleModal';\r\n\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   paper: {\r\n//     position: 'absolute',\r\n//     width: 400,\r\n//     backgroundColor: theme.palette.background.paper,\r\n//     border: '2px solid #000',\r\n//     boxShadow: theme.shadows[5],\r\n//     padding: theme.spacing(2, 4, 3),\r\n//   },\r\n// }));\r\n\r\nfunction Todo(props) {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    // const classes = useStyles();\r\n    const [input, setInput] = useState('');\r\n\r\n//     const handleOpen = () => {\r\n//         setOpen (true);\r\n//     };\r\n//     const handleClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n    const update = () => {\r\n        db.collection('todos').doc(props.todo.id).set({todo: input },{merge: true})\r\n        setOpen(false)\r\n    }\r\n\r\n    return (  \r\n            <div className = \"todo\"> \r\n                      \r\n                {/* <Modal\r\n                    open = {open}\r\n                    onClose = {handleClose}>\r\n                    <div className = {classes.paper}>\r\n                        <h2>Edit Your Task</h2>\r\n                        <input  value = {input}\r\n                                placeholder = {props.todo.todo}\r\n                                onChange = {event => setInput(event.target.value)}/>\r\n                        <Button onClick = {update}>\r\n                            Update\r\n                        </Button>\r\n                    </div>                                 \r\n                </Modal> */}\r\n\r\n                <List className = \"list\">\r\n                    <div>                    \r\n                        <ListItem>\r\n                        <ListItemAvatar>\r\n                        </ListItemAvatar>  \r\n                        <ListItemText\r\n                            className = \"listText\"\r\n                            primary = \"Task --\"\r\n                            secondary = {props.todo.todo} \r\n                        />\r\n                        </ListItem>\r\n                    </div>\r\n                             \r\n                    <div className = \"removeIcon\">\r\n                        <div>\r\n                            {/* <button className = \"editButton\"\r\n                                    onClick = { handleOpen }>                                \r\n                            </button> */}\r\n                            <SimpleModal/>\r\n                        </div>\r\n\r\n                        <DeleteOutlineIcon \r\n                            onClick = {event => \r\n                        db.collection('todos').doc(props.todo.id).delete()\r\n                        }/> \r\n                    </div>             \r\n                </List>\r\n              \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","D:\\Web Development\\TODO\\todo-app\\src\\firebase.js",[],"D:\\Web Development\\TODO\\todo-app\\src\\SimpleModal.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":10,"nodeType":"40","messageId":"41","endLine":1,"endColumn":16},{"ruleId":"38","severity":1,"message":"42","line":26,"column":12,"nodeType":"40","messageId":"41","endLine":26,"endColumn":16},{"ruleId":"38","severity":1,"message":"43","line":28,"column":19,"nodeType":"40","messageId":"41","endLine":28,"endColumn":27},{"ruleId":"38","severity":1,"message":"44","line":37,"column":11,"nodeType":"40","messageId":"41","endLine":37,"endColumn":17},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'open' is assigned a value but never used.","'setInput' is assigned a value but never used.","'update' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]